plugins {
    id("com.github.johnrengelman.shadow") version "7.1.2"
    id("org.openapi.generator") version "6.5.0"
    id("io.micronaut.application") version "3.7.9"
}

version = "0.1"
group = "com.example"

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor("io.micronaut:micronaut-http-validation")
    annotationProcessor("io.micronaut.openapi:micronaut-openapi")
    annotationProcessor("io.micronaut.security:micronaut-security-annotations")
    annotationProcessor("io.micronaut.serde:micronaut-serde-processor")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut.reactor:micronaut-reactor")
    implementation("io.micronaut.reactor:micronaut-reactor-http-client")
    implementation("io.micronaut.security:micronaut-security")
    implementation("io.micronaut.serde:micronaut-serde-jackson")
    implementation("io.swagger.core.v3:swagger-annotations")
    implementation("jakarta.annotation:jakarta.annotation-api")
    runtimeOnly("ch.qos.logback:logback-classic")
}

application {
    mainClass.set("com.example.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("17")
    targetCompatibility = JavaVersion.toVersion("17")
}

graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.example.*")
    }
}


openApiGenerate {
    generatorName = "java-micronaut-server"
    inputSpec = "$projectDir/src/main/resources/openapi.yaml"
    apiPackage = "com.example.api"
    invokerPackage = "com.example.invoker"
    modelPackage = "com.example.model"
    globalProperties = [
            apis      : "",
            models    : "",
            docs      : "false",
            modelDocs : "false",
            modelTests: "false",
            apiTests  : "false",
            apiDocs   : "false"
    ]
    configOptions = [
            generateControllerAsAbstract            : "true",
            generateSwaggerAnnotations              : "true",
            openApiNullable                         : "false",
            reactive                                : "true",
            useAuth                                 : "true",
            generateOperationsToReturnNotImplemented: "false",
            wrapInHttpResponse                      : "true",
            serializationLibrary                    : "micronaut_serde_jackson"
    ]
}

sourceSets {
    main {
        java {
            srcDirs += "${buildDir}/generate-resources/main/src/main/java"
        }
    }
}

compileJava {
    dependsOn tasks.openApiGenerate
}


configurations.all {
    resolutionStrategy.dependencySubstitution {
        substitute(module("io.micronaut:micronaut-jackson-databind"))
                .using(module("io.micronaut.serde:micronaut-serde-jackson:1.5.2"))
    }
}

